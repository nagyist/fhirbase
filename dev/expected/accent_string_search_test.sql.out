SET escape_string_warning=off;
SET
BEGIN;
BEGIN
SELECT assert_eq (
    'Joe Acme',
    _unaccent_string('Jóe Ácme'),
    '_unaccent_string');
WITH device AS (
    SELECT *
    FROM fhir_create('{"base":"https://test.me"}', 'Device', '{
  "resourceType": "Device",
  "type": {
    "coding": [
      {
        "system": "http://snomed.info/sct",
        "code": "86184003",
        "display": "Electrocardiographic monitor and recorder"
      }
    ],
    "text": "ECG"
  },
  "model": "Jóe",
  "manufacturer": "Acme"
}'::jsonb, '[]'::jsonb) as bundle
  ), searching AS (
    SELECT d.*,
      fhir_search('{"base":"https://test.me"}', 'Device', 'model=Joe') as res,
      fhir_search('{"base":"https://test.me"}', 'Device', 'manufacturer=Ácme') as param,
      fhir_search('{"base":"https://test.me"}', 'Device', 'model=Jóe') as res_param
    FROM device d
  )
  SELECT
    assert_eq(
      d.bundle#>>'{entry,0,id}',
      d.res#>>'{entry,0,id}',
      'accent in resource'),
    assert_eq(
      d.bundle#>>'{entry,0,id}',
      d.param#>>'{entry,0,id}',
      'accent in search parameter'),
    assert_eq(
      d.bundle#>>'{entry,0,id}',
      d.res_param#>>'{entry,0,id}',
      'accent in resource and search parameter')
  FROM searching d;
ROLLBACK;
ROLLBACK
