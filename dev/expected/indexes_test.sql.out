SET escape_string_warning=off;
SET
SELECT assert_eq(
(SELECT index_primitive_as_token('{"a":[{"b":1},{"b":2}]}','{a,b}')),
'{1,2}'::varchar[],
'index_primitive_as_token');
          assert_eq          
-----------------------------
 OK index_primitive_as_token
(1 row)

SELECT assert_eq(
(SELECT index_primitive_as_token( E'{"resourceType":"Observation","text":{"status":"generated","div":"<div>\\n      <p>\\n        <b>Generated Narrative</b>\\n      </p>\\n      <p>\\n        <b>name</b>: \\n        <span title=\\"Codes: {http://loinc.org 2339-0}\\">Glucose [Mass/volume] in Blood</span>\\n      </p>\\n      <p>\\n        <b>value[x]</b>: 6.3 mmol/l\\n      </p>\\n      <p>\\n        <b>interpretation</b>: \\n        <span title=\\"Codes: {http://hl7.org/fhir/v2/0078 A}\\">abnormal</span>\\n      </p>\\n      <p>\\n        <b>applies[x]</b>: 2-Apr 2013 9:30 --&gt; 5-Apr 2013 9:30\\n      </p>\\n      <p>\\n        <b>issued</b>: 3-Apr 2013 15:30\\n      </p>\\n      <p>\\n        <b>status</b>: final_\\n      </p>\\n      <p>\\n        <b>reliability</b>: ok\\n      </p>\\n      <p>\\n        <b>bodySite</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 308046002}\\">Superficial forearm vein</span>\\n      </p>\\n      <p>\\n        <b>method</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 120220003}\\">Injection to forearm</span>\\n      </p>\\n      <p>\\n        <b>identifier</b>: 6323 (official)\\n      </p>\\n      <p>\\n        <b>subject</b>: P. van de Heuvel\\n      </p>\\n      <p>\\n        <b>performer</b>: A. Langeveld\\n      </p>\\n      <h3>ReferenceRanges</h3>\\n      <table class=\\"grid\\">\\n        <tr>\\n          <td>\\n            <b>Low</b>\\n          </td>\\n          <td>\\n            <b>High</b>\\n          </td>\\n          <td>\\n            <b>Meaning</b>\\n          </td>\\n          <td>\\n            <b>Age</b>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>3.1 mmol/l</td>\\n          <td>6.2 mmol/l</td>\\n          <td> </td>\\n          <td> </td>\\n        </tr>\\n      </table>\\n    </div>"},"name":{"coding":[{"system":"custom","code":"GLU","display":"Glucose [Mass/volume] in Blood"},{"system":"http://loinc.org","code":"2339-0","display":"Glucose [Mass/volume] in Blood"}]},"valueQuantity":{"value":6.3,"units":"mmol/l","system":"http://unitsofmeasure.org","code":"mmol/l"},"interpretation":{"coding":[{"system":"http://hl7.org/fhir/v2/0078","code":"A","display":"abnormal"}]},"appliesPeriod":{"start":"2013-04-02T09:30:10+01:00","end":"2013-04-05T09:30:10+01:00"},"issued":"2013-04-03T15:30:10+01:00","status":"final","reliability":"ok","bodySite":{"coding":[{"system":"http://snomed.info/sct","code":"308046002","display":"Superficial forearm vein"}]},"method":{"coding":[{"system":"http://snomed.info/sct","code":"120220003","display":"Injection to forearm"}]},"identifier":{"use":"official","system":"http://www.bmc.nl/zorgportal/identifiers/observations","value":"6323"},"subject":{"reference":"Patient/f001","display":"P. van de Heuvel"},"performer":[{"reference":"Practitioner/f005","display":"A. Langeveld"}],"referenceRange":[{"low":{"value":3.1,"units":"mmol/l","system":"http://unitsofmeasure.org","code":"mmol/l"},"high":{"value":6.2,"units":"mmol/l","system":"http://unitsofmeasure.org","code":"mmol/l"}}]}','{status}')),
'{final}'::varchar[],
'index_primitive_as_token');
          assert_eq          
-----------------------------
 OK index_primitive_as_token
(1 row)

SELECT assert_eq(
(SELECT index_codeableconcept_as_token( E'{"resourceType":"Observation","text":{"status":"generated","div":"<div>\\n      <p>\\n        <b>Generated Narrative</b>\\n      </p>\\n      <p>\\n        <b>name</b>: \\n        <span title=\\"Codes: {http://loinc.org 2339-0}\\">Glucose [Mass/volume] in Blood</span>\\n      </p>\\n      <p>\\n        <b>value[x]</b>: 6.3 mmol/l\\n      </p>\\n      <p>\\n        <b>interpretation</b>: \\n        <span title=\\"Codes: {http://hl7.org/fhir/v2/0078 A}\\">abnormal</span>\\n      </p>\\n      <p>\\n        <b>applies[x]</b>: 2-Apr 2013 9:30 --&gt; 5-Apr 2013 9:30\\n      </p>\\n      <p>\\n        <b>issued</b>: 3-Apr 2013 15:30\\n      </p>\\n      <p>\\n        <b>status</b>: final_\\n      </p>\\n      <p>\\n        <b>reliability</b>: ok\\n      </p>\\n      <p>\\n        <b>bodySite</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 308046002}\\">Superficial forearm vein</span>\\n      </p>\\n      <p>\\n        <b>method</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 120220003}\\">Injection to forearm</span>\\n      </p>\\n      <p>\\n        <b>identifier</b>: 6323 (official)\\n      </p>\\n      <p>\\n        <b>subject</b>: P. van de Heuvel\\n      </p>\\n      <p>\\n        <b>performer</b>: A. Langeveld\\n      </p>\\n      <h3>ReferenceRanges</h3>\\n      <table class=\\"grid\\">\\n        <tr>\\n          <td>\\n            <b>Low</b>\\n          </td>\\n          <td>\\n            <b>High</b>\\n          </td>\\n          <td>\\n            <b>Meaning</b>\\n          </td>\\n          <td>\\n            <b>Age</b>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>3.1 mmol/l</td>\\n          <td>6.2 mmol/l</td>\\n          <td> </td>\\n          <td> </td>\\n        </tr>\\n      </table>\\n    </div>"},"name":{"coding":[{"system":"custom","code":"GLU","display":"Glucose [Mass/volume] in Blood"},{"system":"http://loinc.org","code":"2339-0","display":"Glucose [Mass/volume] in Blood"}]},"valueQuantity":{"value":6.3,"units":"mmol/l","system":"http://unitsofmeasure.org","code":"mmol/l"},"interpretation":{"coding":[{"system":"http://hl7.org/fhir/v2/0078","code":"A","display":"abnormal"}]},"appliesPeriod":{"start":"2013-04-02T09:30:10+01:00","end":"2013-04-05T09:30:10+01:00"},"issued":"2013-04-03T15:30:10+01:00","status":"final","reliability":"ok","bodySite":{"coding":[{"system":"http://snomed.info/sct","code":"308046002","display":"Superficial forearm vein"}]},"method":{"coding":[{"system":"http://snomed.info/sct","code":"120220003","display":"Injection to forearm"}]},"identifier":{"use":"official","system":"http://www.bmc.nl/zorgportal/identifiers/observations","value":"6323"},"subject":{"reference":"Patient/f001","display":"P. van de Heuvel"},"performer":[{"reference":"Practitioner/f005","display":"A. Langeveld"}],"referenceRange":[{"low":{"value":3.1,"units":"mmol/l","system":"http://unitsofmeasure.org","code":"mmol/l"},"high":{"value":6.2,"units":"mmol/l","system":"http://unitsofmeasure.org","code":"mmol/l"}}]}','{name}')),
 '{custom|GLU,http://loinc.org|2339-0,2339-0,GLU}'::varchar[],
'index_codeable_concept_as_token');
             assert_eq              
------------------------------------
 OK index_codeable_concept_as_token
(1 row)

SELECT assert_eq(
(SELECT index_coding_as_token( E'{"resourceType":"Observation","text":{"status":"generated","div":"<div>\\n      <p>\\n        <b>Generated Narrative</b>\\n      </p>\\n      <p>\\n        <b>name</b>: \\n        <span title=\\"Codes: {http://loinc.org 2339-0}\\">Glucose [Mass/volume] in Blood</span>\\n      </p>\\n      <p>\\n        <b>value[x]</b>: 6.3 mmol/l\\n      </p>\\n      <p>\\n        <b>interpretation</b>: \\n        <span title=\\"Codes: {http://hl7.org/fhir/v2/0078 A}\\">abnormal</span>\\n      </p>\\n      <p>\\n        <b>applies[x]</b>: 2-Apr 2013 9:30 --&gt; 5-Apr 2013 9:30\\n      </p>\\n      <p>\\n        <b>issued</b>: 3-Apr 2013 15:30\\n      </p>\\n      <p>\\n        <b>status</b>: final_\\n      </p>\\n      <p>\\n        <b>reliability</b>: ok\\n      </p>\\n      <p>\\n        <b>bodySite</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 308046002}\\">Superficial forearm vein</span>\\n      </p>\\n      <p>\\n        <b>method</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 120220003}\\">Injection to forearm</span>\\n      </p>\\n      <p>\\n        <b>identifier</b>: 6323 (official)\\n      </p>\\n      <p>\\n        <b>subject</b>: P. van de Heuvel\\n      </p>\\n      <p>\\n        <b>performer</b>: A. Langeveld\\n      </p>\\n      <h3>ReferenceRanges</h3>\\n      <table class=\\"grid\\">\\n        <tr>\\n          <td>\\n            <b>Low</b>\\n          </td>\\n          <td>\\n            <b>High</b>\\n          </td>\\n          <td>\\n            <b>Meaning</b>\\n          </td>\\n          <td>\\n            <b>Age</b>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>3.1 mmol/l</td>\\n          <td>6.2 mmol/l</td>\\n          <td> </td>\\n          <td> </td>\\n        </tr>\\n      </table>\\n    </div>"},"name":{"coding":[{"system":"custom","code":"GLU","display":"Glucose [Mass/volume] in Blood"},{"system":"http://loinc.org","code":"2339-0","display":"Glucose [Mass/volume] in Blood"}]},"valueQuantity":{"value":6.3,"units":"mmol/l","system":"http://unitsofmeasure.org","code":"mmol/l"},"interpretation":{"coding":[{"system":"http://hl7.org/fhir/v2/0078","code":"A","display":"abnormal"}]},"appliesPeriod":{"start":"2013-04-02T09:30:10+01:00","end":"2013-04-05T09:30:10+01:00"},"issued":"2013-04-03T15:30:10+01:00","status":"final","reliability":"ok","bodySite":{"coding":[{"system":"http://snomed.info/sct","code":"308046002","display":"Superficial forearm vein"}]},"method":{"coding":[{"system":"http://snomed.info/sct","code":"120220003","display":"Injection to forearm"}]},"identifier":{"use":"official","system":"http://www.bmc.nl/zorgportal/identifiers/observations","value":"6323"},"subject":{"reference":"Patient/f001","display":"P. van de Heuvel"},"performer":[{"reference":"Practitioner/f005","display":"A. Langeveld"}],"referenceRange":[{"low":{"value":3.1,"units":"mmol/l","system":"http://unitsofmeasure.org","code":"mmol/l"},"high":{"value":6.2,"units":"mmol/l","system":"http://unitsofmeasure.org","code":"mmol/l"}}]}','{name,coding}')),
 '{custom|GLU,http://loinc.org|2339-0,2339-0,GLU}'::varchar[],
 'index_coding_as_token');
        assert_eq         
--------------------------
 OK index_coding_as_token
(1 row)

SELECT assert_eq(
(SELECT index_identifier_as_token( E'{
  "resourceType": "Patient",
  "text": {
    "status": "generated",
    "div": "<div>\\n      <p>\\n        <b>Generated Narrative</b>\\n      </p>\\n      <p>\\n        <b>identifier</b>: BSN = 123456789 (official), BSN = 123456789 (official)\\n      </p>\\n      <p>\\n        <b>name</b>: Roel(official)\\n      </p>\\n      <p>\\n        <b>telecom</b>: ph: +31612345678(mobile), ph: +31201234567(home)\\n      </p>\\n      <p>\\n        <b>gender</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 248153007}, {http://hl7.org/fhir/v3/AdministrativeGender M}\\">Male</span>\\n      </p>\\n      <p>\\n        <b>birthDate</b>: 13-Mar 1960\\n      </p>\\n      <p>\\n        <b>deceased[x]</b>: false\\n      </p>\\n      <p>\\n        <b>address</b>: Bos en Lommerplein 280 Amsterdam 1055RW NLD (home)\\n      </p>\\n      <p>\\n        <b>maritalStatus</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 36629006}, {http://hl7.org/fhir/v3/MaritalStatus M}\\">Legally married</span>\\n      </p>\\n      <p>\\n        <b>multipleBirth[x]</b>: false\\n      </p>\\n      <p>\\n        <b>photo</b>: \\n      </p>\\n      <h3>Contacts</h3>\\n      <table class=\\"grid\\">\\n        <tr>\\n          <td>\\n            <b>Relationship</b>\\n          </td>\\n          <td>\\n            <b>Name</b>\\n          </td>\\n          <td>\\n            <b>Telecom</b>\\n          </td>\\n          <td>\\n            <b>Address</b>\\n          </td>\\n          <td>\\n            <b>Gender</b>\\n          </td>\\n          <td>\\n            <b>Organization</b>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <span title=\\"Codes: {http://snomed.info/sct 127850001}, {http://hl7.org/fhir/patient-contact-relationship partner}\\">Wife</span>\\n          </td>\\n          <td>Ariadne Bor-Jansma</td>\\n          <td>ph: +31201234567(home)</td>\\n          <td> </td>\\n          <td> </td>\\n          <td> </td>\\n        </tr>\\n      </table>\\n      <p>\\n        <b>communication</b>: \\n        <span title=\\"Codes: {urn:std:iso:639-1 nl-NL}\\">Dutch</span>\\n      </p>\\n      <p>\\n        <b>managingOrganization</b>: AUMC\\n      </p>\\n      <p>\\n        <b>active</b>: true\\n      </p>\\n    </div>"
  },
  "identifier": [
    {
      "use": "official",
      "label": "MRN",
      "system": "MRN",
      "value": "7777777"
    },
    {
      "use": "official",
      "label": "BSN",
      "system": "urn:oid:2.16.840.1.113883.2.4.6.3",
      "value": "123456789"
    }
  ],
  "name": [
    {
      "use": "official",
      "text": "Roel",
      "family": [
        "Bor"
      ],
      "given": [
        "Roelof Olaf"
      ],
      "prefix": [
        "Drs."
      ],
      "suffix": [
        "PDEng."
      ]
    }
  ],
  "telecom": [
    {
      "system": "phone",
      "value": "+31612345678",
      "use": "mobile"
    },
    {
      "system": "phone",
      "value": "+31201234567",
      "use": "home"
    }
  ],
  "gender": {
    "coding": [
      {
        "system": "http://snomed.info/sct",
        "code": "248153007",
        "display": "Male"
      },
      {
        "system": "http://hl7.org/fhir/v3/AdministrativeGender",
        "code": "M",
        "display": "Male"
      }
    ]
  },
  "birthDate": "1960-03-13",
  "deceasedBoolean": false,
  "address": [
    {
      "use": "home",
      "line": [
        "Bos en Lommerplein 280"
      ],
      "city": "Amsterdam",
      "zip": "1055RW",
      "country": "NLD"
    }
  ],
  "maritalStatus": {
    "coding": [
      {
        "system": "http://snomed.info/sct",
        "code": "36629006",
        "display": "Legally married"
      },
      {
        "system": "http://hl7.org/fhir/v3/MaritalStatus",
        "code": "M"
      }
    ]
  },
  "multipleBirthBoolean": false,
  "photo": [
    {
      "contentType": "image/jpeg",
      "url": "binary/@f006"
    }
  ],
  "contact": [
    {
      "relationship": [
        {
          "coding": [
            {
              "system": "http://snomed.info/sct",
              "code": "127850001",
              "display": "Wife"
            },
            {
              "system": "http://hl7.org/fhir/patient-contact-relationship",
              "code": "partner"
            }
          ]
        }
      ],
      "name": {
        "use": "usual",
        "text": "Ariadne Bor-Jansma"
      },
      "telecom": [
        {
          "system": "phone",
          "value": "+31201234567",
          "use": "home"
        }
      ]
    }
  ],
  "communication": [
    {
      "coding": [
        {
          "system": "urn:std:iso:639-1",
          "code": "nl-NL",
          "display": "Dutch"
        }
      ]
    }
  ],
  "managingOrganization": {
    "reference": "Organization/%s",
    "display": "AUMC"
  },
  "active": true
}','{identifier}')),
 '{urn:oid:2.16.840.1.113883.2.4.6.3|123456789,MRN|7777777,7777777,123456789}'::varchar[],
'index_identifier_as_token');
          assert_eq           
------------------------------
 OK index_identifier_as_token
(1 row)

SELECT assert_eq(
(SELECT index_as_string( E'{
  "resourceType": "Patient",
  "text": {
    "status": "generated",
    "div": "<div>\\n      <p>\\n        <b>Generated Narrative</b>\\n      </p>\\n      <p>\\n        <b>identifier</b>: BSN = 123456789 (official), BSN = 123456789 (official)\\n      </p>\\n      <p>\\n        <b>name</b>: Roel(official)\\n      </p>\\n      <p>\\n        <b>telecom</b>: ph: +31612345678(mobile), ph: +31201234567(home)\\n      </p>\\n      <p>\\n        <b>gender</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 248153007}, {http://hl7.org/fhir/v3/AdministrativeGender M}\\">Male</span>\\n      </p>\\n      <p>\\n        <b>birthDate</b>: 13-Mar 1960\\n      </p>\\n      <p>\\n        <b>deceased[x]</b>: false\\n      </p>\\n      <p>\\n        <b>address</b>: Bos en Lommerplein 280 Amsterdam 1055RW NLD (home)\\n      </p>\\n      <p>\\n        <b>maritalStatus</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 36629006}, {http://hl7.org/fhir/v3/MaritalStatus M}\\">Legally married</span>\\n      </p>\\n      <p>\\n        <b>multipleBirth[x]</b>: false\\n      </p>\\n      <p>\\n        <b>photo</b>: \\n      </p>\\n      <h3>Contacts</h3>\\n      <table class=\\"grid\\">\\n        <tr>\\n          <td>\\n            <b>Relationship</b>\\n          </td>\\n          <td>\\n            <b>Name</b>\\n          </td>\\n          <td>\\n            <b>Telecom</b>\\n          </td>\\n          <td>\\n            <b>Address</b>\\n          </td>\\n          <td>\\n            <b>Gender</b>\\n          </td>\\n          <td>\\n            <b>Organization</b>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <span title=\\"Codes: {http://snomed.info/sct 127850001}, {http://hl7.org/fhir/patient-contact-relationship partner}\\">Wife</span>\\n          </td>\\n          <td>Ariadne Bor-Jansma</td>\\n          <td>ph: +31201234567(home)</td>\\n          <td> </td>\\n          <td> </td>\\n          <td> </td>\\n        </tr>\\n      </table>\\n      <p>\\n        <b>communication</b>: \\n        <span title=\\"Codes: {urn:std:iso:639-1 nl-NL}\\">Dutch</span>\\n      </p>\\n      <p>\\n        <b>managingOrganization</b>: AUMC\\n      </p>\\n      <p>\\n        <b>active</b>: true\\n      </p>\\n    </div>"
  },
  "identifier": [
    {
      "use": "official",
      "label": "MRN",
      "system": "MRN",
      "value": "7777777"
    },
    {
      "use": "official",
      "label": "BSN",
      "system": "urn:oid:2.16.840.1.113883.2.4.6.3",
      "value": "123456789"
    }
  ],
  "name": [
    {
      "use": "official",
      "text": "Roel",
      "family": [
        "Bor"
      ],
      "given": [
        "Roelof Olaf"
      ],
      "prefix": [
        "Drs."
      ],
      "suffix": [
        "PDEng."
      ]
    }
  ],
  "telecom": [
    {
      "system": "phone",
      "value": "+31612345678",
      "use": "mobile"
    },
    {
      "system": "phone",
      "value": "+31201234567",
      "use": "home"
    }
  ],
  "gender": {
    "coding": [
      {
        "system": "http://snomed.info/sct",
        "code": "248153007",
        "display": "Male"
      },
      {
        "system": "http://hl7.org/fhir/v3/AdministrativeGender",
        "code": "M",
        "display": "Male"
      }
    ]
  },
  "birthDate": "1960-03-13",
  "deceasedBoolean": false,
  "address": [
    {
      "use": "home",
      "line": [
        "Bos en Lommerplein 280"
      ],
      "city": "Amsterdam",
      "zip": "1055RW",
      "country": "NLD"
    }
  ],
  "maritalStatus": {
    "coding": [
      {
        "system": "http://snomed.info/sct",
        "code": "36629006",
        "display": "Legally married"
      },
      {
        "system": "http://hl7.org/fhir/v3/MaritalStatus",
        "code": "M"
      }
    ]
  },
  "multipleBirthBoolean": false,
  "photo": [
    {
      "contentType": "image/jpeg",
      "url": "binary/@f006"
    }
  ],
  "contact": [
    {
      "relationship": [
        {
          "coding": [
            {
              "system": "http://snomed.info/sct",
              "code": "127850001",
              "display": "Wife"
            },
            {
              "system": "http://hl7.org/fhir/patient-contact-relationship",
              "code": "partner"
            }
          ]
        }
      ],
      "name": {
        "use": "usual",
        "text": "Ariadne Bor-Jansma"
      },
      "telecom": [
        {
          "system": "phone",
          "value": "+31201234567",
          "use": "home"
        }
      ]
    }
  ],
  "communication": [
    {
      "coding": [
        {
          "system": "urn:std:iso:639-1",
          "code": "nl-NL",
          "display": "Dutch"
        }
      ]
    }
  ],
  "managingOrganization": {
    "reference": "Organization/%s",
    "display": "AUMC"
  },
  "active": true
}','{name}')::text ilike '%Roel%'),
true,
'index_as_string');
     assert_eq      
--------------------
 OK index_as_string
(1 row)

SELECT assert_eq(
(SELECT index_as_string( E'{
  "resourceType": "Patient",
  "text": {
    "status": "generated",
    "div": "<div>\\n      <p>\\n        <b>Generated Narrative</b>\\n      </p>\\n      <p>\\n        <b>identifier</b>: BSN = 123456789 (official), BSN = 123456789 (official)\\n      </p>\\n      <p>\\n        <b>name</b>: Roel(official)\\n      </p>\\n      <p>\\n        <b>telecom</b>: ph: +31612345678(mobile), ph: +31201234567(home)\\n      </p>\\n      <p>\\n        <b>gender</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 248153007}, {http://hl7.org/fhir/v3/AdministrativeGender M}\\">Male</span>\\n      </p>\\n      <p>\\n        <b>birthDate</b>: 13-Mar 1960\\n      </p>\\n      <p>\\n        <b>deceased[x]</b>: false\\n      </p>\\n      <p>\\n        <b>address</b>: Bos en Lommerplein 280 Amsterdam 1055RW NLD (home)\\n      </p>\\n      <p>\\n        <b>maritalStatus</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 36629006}, {http://hl7.org/fhir/v3/MaritalStatus M}\\">Legally married</span>\\n      </p>\\n      <p>\\n        <b>multipleBirth[x]</b>: false\\n      </p>\\n      <p>\\n        <b>photo</b>: \\n      </p>\\n      <h3>Contacts</h3>\\n      <table class=\\"grid\\">\\n        <tr>\\n          <td>\\n            <b>Relationship</b>\\n          </td>\\n          <td>\\n            <b>Name</b>\\n          </td>\\n          <td>\\n            <b>Telecom</b>\\n          </td>\\n          <td>\\n            <b>Address</b>\\n          </td>\\n          <td>\\n            <b>Gender</b>\\n          </td>\\n          <td>\\n            <b>Organization</b>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <span title=\\"Codes: {http://snomed.info/sct 127850001}, {http://hl7.org/fhir/patient-contact-relationship partner}\\">Wife</span>\\n          </td>\\n          <td>Ariadne Bor-Jansma</td>\\n          <td>ph: +31201234567(home)</td>\\n          <td> </td>\\n          <td> </td>\\n          <td> </td>\\n        </tr>\\n      </table>\\n      <p>\\n        <b>communication</b>: \\n        <span title=\\"Codes: {urn:std:iso:639-1 nl-NL}\\">Dutch</span>\\n      </p>\\n      <p>\\n        <b>managingOrganization</b>: AUMC\\n      </p>\\n      <p>\\n        <b>active</b>: true\\n      </p>\\n    </div>"
  },
  "identifier": [
    {
      "use": "official",
      "label": "MRN",
      "system": "MRN",
      "value": "7777777"
    },
    {
      "use": "official",
      "label": "BSN",
      "system": "urn:oid:2.16.840.1.113883.2.4.6.3",
      "value": "123456789"
    }
  ],
  "name": [
    {
      "use": "official",
      "text": "Roel",
      "family": [
        "Bor"
      ],
      "given": [
        "Roelof Olaf"
      ],
      "prefix": [
        "Drs."
      ],
      "suffix": [
        "PDEng."
      ]
    }
  ],
  "telecom": [
    {
      "system": "phone",
      "value": "+31612345678",
      "use": "mobile"
    },
    {
      "system": "phone",
      "value": "+31201234567",
      "use": "home"
    }
  ],
  "gender": {
    "coding": [
      {
        "system": "http://snomed.info/sct",
        "code": "248153007",
        "display": "Male"
      },
      {
        "system": "http://hl7.org/fhir/v3/AdministrativeGender",
        "code": "M",
        "display": "Male"
      }
    ]
  },
  "birthDate": "1960-03-13",
  "deceasedBoolean": false,
  "address": [
    {
      "use": "home",
      "line": [
        "Bos en Lommerplein 280"
      ],
      "city": "Amsterdam",
      "zip": "1055RW",
      "country": "NLD"
    }
  ],
  "maritalStatus": {
    "coding": [
      {
        "system": "http://snomed.info/sct",
        "code": "36629006",
        "display": "Legally married"
      },
      {
        "system": "http://hl7.org/fhir/v3/MaritalStatus",
        "code": "M"
      }
    ]
  },
  "multipleBirthBoolean": false,
  "photo": [
    {
      "contentType": "image/jpeg",
      "url": "binary/@f006"
    }
  ],
  "contact": [
    {
      "relationship": [
        {
          "coding": [
            {
              "system": "http://snomed.info/sct",
              "code": "127850001",
              "display": "Wife"
            },
            {
              "system": "http://hl7.org/fhir/patient-contact-relationship",
              "code": "partner"
            }
          ]
        }
      ],
      "name": {
        "use": "usual",
        "text": "Ariadne Bor-Jansma"
      },
      "telecom": [
        {
          "system": "phone",
          "value": "+31201234567",
          "use": "home"
        }
      ]
    }
  ],
  "communication": [
    {
      "coding": [
        {
          "system": "urn:std:iso:639-1",
          "code": "nl-NL",
          "display": "Dutch"
        }
      ]
    }
  ],
  "managingOrganization": {
    "reference": "Organization/%s",
    "display": "AUMC"
  },
  "active": true
}','{name}')::text ilike '%Bor%'),
true,
'index_as_string');
     assert_eq      
--------------------
 OK index_as_string
(1 row)

SELECT assert_eq(
(SELECT index_as_reference(format( E'{
  "resourceType": "Patient",
  "text": {
    "status": "generated",
    "div": "<div>\\n      <p>\\n        <b>Generated Narrative</b>\\n      </p>\\n      <p>\\n        <b>identifier</b>: BSN = 123456789 (official), BSN = 123456789 (official)\\n      </p>\\n      <p>\\n        <b>name</b>: Roel(official)\\n      </p>\\n      <p>\\n        <b>telecom</b>: ph: +31612345678(mobile), ph: +31201234567(home)\\n      </p>\\n      <p>\\n        <b>gender</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 248153007}, {http://hl7.org/fhir/v3/AdministrativeGender M}\\">Male</span>\\n      </p>\\n      <p>\\n        <b>birthDate</b>: 13-Mar 1960\\n      </p>\\n      <p>\\n        <b>deceased[x]</b>: false\\n      </p>\\n      <p>\\n        <b>address</b>: Bos en Lommerplein 280 Amsterdam 1055RW NLD (home)\\n      </p>\\n      <p>\\n        <b>maritalStatus</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 36629006}, {http://hl7.org/fhir/v3/MaritalStatus M}\\">Legally married</span>\\n      </p>\\n      <p>\\n        <b>multipleBirth[x]</b>: false\\n      </p>\\n      <p>\\n        <b>photo</b>: \\n      </p>\\n      <h3>Contacts</h3>\\n      <table class=\\"grid\\">\\n        <tr>\\n          <td>\\n            <b>Relationship</b>\\n          </td>\\n          <td>\\n            <b>Name</b>\\n          </td>\\n          <td>\\n            <b>Telecom</b>\\n          </td>\\n          <td>\\n            <b>Address</b>\\n          </td>\\n          <td>\\n            <b>Gender</b>\\n          </td>\\n          <td>\\n            <b>Organization</b>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <span title=\\"Codes: {http://snomed.info/sct 127850001}, {http://hl7.org/fhir/patient-contact-relationship partner}\\">Wife</span>\\n          </td>\\n          <td>Ariadne Bor-Jansma</td>\\n          <td>ph: +31201234567(home)</td>\\n          <td> </td>\\n          <td> </td>\\n          <td> </td>\\n        </tr>\\n      </table>\\n      <p>\\n        <b>communication</b>: \\n        <span title=\\"Codes: {urn:std:iso:639-1 nl-NL}\\">Dutch</span>\\n      </p>\\n      <p>\\n        <b>managingOrganization</b>: AUMC\\n      </p>\\n      <p>\\n        <b>active</b>: true\\n      </p>\\n    </div>"
  },
  "identifier": [
    {
      "use": "official",
      "label": "MRN",
      "system": "MRN",
      "value": "7777777"
    },
    {
      "use": "official",
      "label": "BSN",
      "system": "urn:oid:2.16.840.1.113883.2.4.6.3",
      "value": "123456789"
    }
  ],
  "name": [
    {
      "use": "official",
      "text": "Roel",
      "family": [
        "Bor"
      ],
      "given": [
        "Roelof Olaf"
      ],
      "prefix": [
        "Drs."
      ],
      "suffix": [
        "PDEng."
      ]
    }
  ],
  "telecom": [
    {
      "system": "phone",
      "value": "+31612345678",
      "use": "mobile"
    },
    {
      "system": "phone",
      "value": "+31201234567",
      "use": "home"
    }
  ],
  "gender": {
    "coding": [
      {
        "system": "http://snomed.info/sct",
        "code": "248153007",
        "display": "Male"
      },
      {
        "system": "http://hl7.org/fhir/v3/AdministrativeGender",
        "code": "M",
        "display": "Male"
      }
    ]
  },
  "birthDate": "1960-03-13",
  "deceasedBoolean": false,
  "address": [
    {
      "use": "home",
      "line": [
        "Bos en Lommerplein 280"
      ],
      "city": "Amsterdam",
      "zip": "1055RW",
      "country": "NLD"
    }
  ],
  "maritalStatus": {
    "coding": [
      {
        "system": "http://snomed.info/sct",
        "code": "36629006",
        "display": "Legally married"
      },
      {
        "system": "http://hl7.org/fhir/v3/MaritalStatus",
        "code": "M"
      }
    ]
  },
  "multipleBirthBoolean": false,
  "photo": [
    {
      "contentType": "image/jpeg",
      "url": "binary/@f006"
    }
  ],
  "contact": [
    {
      "relationship": [
        {
          "coding": [
            {
              "system": "http://snomed.info/sct",
              "code": "127850001",
              "display": "Wife"
            },
            {
              "system": "http://hl7.org/fhir/patient-contact-relationship",
              "code": "partner"
            }
          ]
        }
      ],
      "name": {
        "use": "usual",
        "text": "Ariadne Bor-Jansma"
      },
      "telecom": [
        {
          "system": "phone",
          "value": "+31201234567",
          "use": "home"
        }
      ]
    }
  ],
  "communication": [
    {
      "coding": [
        {
          "system": "urn:std:iso:639-1",
          "code": "nl-NL",
          "display": "Dutch"
        }
      ]
    }
  ],
  "managingOrganization": {
    "reference": "Organization/%s",
    "display": "AUMC"
  },
  "active": true
}', '550e8400-e29b-41d4-a716-446655440009')::jsonb,  '{managingOrganization}'::varchar[])),
'{550e8400-e29b-41d4-a716-446655440009,Organization/550e8400-e29b-41d4-a716-446655440009}',
'index reference');
     assert_eq      
--------------------
 OK index reference
(1 row)

/* SELECT index_as_string(:'pt'::jsonb,  '{name}'::varchar[]); */
SELECT assert_eq(
(SELECT
  regexp_matches(
  index_as_string( E'{
  "resourceType": "Patient",
  "text": {
    "status": "generated",
    "div": "<div>\\n      <p>\\n        <b>Generated Narrative</b>\\n      </p>\\n      <p>\\n        <b>identifier</b>: BSN = 123456789 (official), BSN = 123456789 (official)\\n      </p>\\n      <p>\\n        <b>name</b>: Roel(official)\\n      </p>\\n      <p>\\n        <b>telecom</b>: ph: +31612345678(mobile), ph: +31201234567(home)\\n      </p>\\n      <p>\\n        <b>gender</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 248153007}, {http://hl7.org/fhir/v3/AdministrativeGender M}\\">Male</span>\\n      </p>\\n      <p>\\n        <b>birthDate</b>: 13-Mar 1960\\n      </p>\\n      <p>\\n        <b>deceased[x]</b>: false\\n      </p>\\n      <p>\\n        <b>address</b>: Bos en Lommerplein 280 Amsterdam 1055RW NLD (home)\\n      </p>\\n      <p>\\n        <b>maritalStatus</b>: \\n        <span title=\\"Codes: {http://snomed.info/sct 36629006}, {http://hl7.org/fhir/v3/MaritalStatus M}\\">Legally married</span>\\n      </p>\\n      <p>\\n        <b>multipleBirth[x]</b>: false\\n      </p>\\n      <p>\\n        <b>photo</b>: \\n      </p>\\n      <h3>Contacts</h3>\\n      <table class=\\"grid\\">\\n        <tr>\\n          <td>\\n            <b>Relationship</b>\\n          </td>\\n          <td>\\n            <b>Name</b>\\n          </td>\\n          <td>\\n            <b>Telecom</b>\\n          </td>\\n          <td>\\n            <b>Address</b>\\n          </td>\\n          <td>\\n            <b>Gender</b>\\n          </td>\\n          <td>\\n            <b>Organization</b>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <span title=\\"Codes: {http://snomed.info/sct 127850001}, {http://hl7.org/fhir/patient-contact-relationship partner}\\">Wife</span>\\n          </td>\\n          <td>Ariadne Bor-Jansma</td>\\n          <td>ph: +31201234567(home)</td>\\n          <td> </td>\\n          <td> </td>\\n          <td> </td>\\n        </tr>\\n      </table>\\n      <p>\\n        <b>communication</b>: \\n        <span title=\\"Codes: {urn:std:iso:639-1 nl-NL}\\">Dutch</span>\\n      </p>\\n      <p>\\n        <b>managingOrganization</b>: AUMC\\n      </p>\\n      <p>\\n        <b>active</b>: true\\n      </p>\\n    </div>"
  },
  "identifier": [
    {
      "use": "official",
      "label": "MRN",
      "system": "MRN",
      "value": "7777777"
    },
    {
      "use": "official",
      "label": "BSN",
      "system": "urn:oid:2.16.840.1.113883.2.4.6.3",
      "value": "123456789"
    }
  ],
  "name": [
    {
      "use": "official",
      "text": "Roel",
      "family": [
        "Bor"
      ],
      "given": [
        "Roelof Olaf"
      ],
      "prefix": [
        "Drs."
      ],
      "suffix": [
        "PDEng."
      ]
    }
  ],
  "telecom": [
    {
      "system": "phone",
      "value": "+31612345678",
      "use": "mobile"
    },
    {
      "system": "phone",
      "value": "+31201234567",
      "use": "home"
    }
  ],
  "gender": {
    "coding": [
      {
        "system": "http://snomed.info/sct",
        "code": "248153007",
        "display": "Male"
      },
      {
        "system": "http://hl7.org/fhir/v3/AdministrativeGender",
        "code": "M",
        "display": "Male"
      }
    ]
  },
  "birthDate": "1960-03-13",
  "deceasedBoolean": false,
  "address": [
    {
      "use": "home",
      "line": [
        "Bos en Lommerplein 280"
      ],
      "city": "Amsterdam",
      "zip": "1055RW",
      "country": "NLD"
    }
  ],
  "maritalStatus": {
    "coding": [
      {
        "system": "http://snomed.info/sct",
        "code": "36629006",
        "display": "Legally married"
      },
      {
        "system": "http://hl7.org/fhir/v3/MaritalStatus",
        "code": "M"
      }
    ]
  },
  "multipleBirthBoolean": false,
  "photo": [
    {
      "contentType": "image/jpeg",
      "url": "binary/@f006"
    }
  ],
  "contact": [
    {
      "relationship": [
        {
          "coding": [
            {
              "system": "http://snomed.info/sct",
              "code": "127850001",
              "display": "Wife"
            },
            {
              "system": "http://hl7.org/fhir/patient-contact-relationship",
              "code": "partner"
            }
          ]
        }
      ],
      "name": {
        "use": "usual",
        "text": "Ariadne Bor-Jansma"
      },
      "telecom": [
        {
          "system": "phone",
          "value": "+31201234567",
          "use": "home"
        }
      ]
    }
  ],
  "communication": [
    {
      "coding": [
        {
          "system": "urn:std:iso:639-1",
          "code": "nl-NL",
          "display": "Dutch"
        }
      ]
    }
  ],
  "managingOrganization": {
    "reference": "Organization/%s",
    "display": "AUMC"
  },
  "active": true
}'::jsonb,  '{name}'::varchar[]),
  'Roel')),
'{Roel}'::text[],
'index_as_string');
     assert_eq      
--------------------
 OK index_as_string
(1 row)

SELECT drop_all_resource_indexes();
 drop_all_resource_indexes 
---------------------------
                       427
(1 row)

SELECT index_search_param('Patient','name');
 index_search_param 
--------------------
 1
(1 row)

SELECT drop_index_search_param('Patient','name');
 drop_index_search_param 
-------------------------
                       1
(1 row)

SELECT index_all_resources();
                                                                                                 index_all_resources                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 CREATE INDEX imagingstudy_uid_uid_token_idx ON imagingstudy USING GIN (index_primitive_as_token(content,'{series,instance,uid}'))
 CREATE INDEX diagnosticorder_bodysite_bodysite_token_idx ON diagnosticorder USING GIN (index_codeableconcept_as_token(content,'{item,bodySite}'))
 CREATE INDEX medicationdispense_identifier_identifier_token_idx ON medicationdispense USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX diagnosticreport_diagnosis_codeddiagnosis_token_idx ON diagnosticreport USING GIN (index_codeableconcept_as_token(content,'{codedDiagnosis}'))
 CREATE INDEX documentmanifest_supersedes_supercedes_reference_idx ON documentmanifest USING GIN (index_as_reference(content,'{supercedes}'))
 CREATE INDEX condition_category_category_token_idx ON condition USING GIN (index_codeableconcept_as_token(content,'{category}'))
 CREATE INDEX organization_partof_partof_reference_idx ON organization USING GIN (index_as_reference(content,'{partOf}'))
 CREATE INDEX media_type_type_token_idx ON media USING GIN (index_primitive_as_token(content,'{type}'))
 CREATE INDEX media_subject_subject_reference_idx ON media USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX relatedperson_telecom_telecom_string_idx ON relatedperson USING GIN (index_as_string(content,'{telecom}'::text[]) gin_trgm_ops)
 CREATE INDEX observation_value_string_valuesampleddata_string_idx ON observation USING GIN (index_as_string(content,'{valueSampledData}'::text[]) gin_trgm_ops)
 CREATE INDEX medicationdispense_whenprepared_whenprepared_date_idx ON medicationdispense USING GIST (index_as_date(content,'{dispense,whenPrepared}'::text[], 'dateTime') range_ops)
 CREATE INDEX securityevent_type_type_token_idx ON securityevent USING GIN (index_codeableconcept_as_token(content,'{event,type}'))
 CREATE INDEX medicationadministration_identifier_identifier_token_idx ON medicationadministration USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX conformance_date_date_date_idx ON conformance USING GIST (index_as_date(content,'{date}'::text[], 'dateTime') range_ops)
 CREATE INDEX conceptmap_source_source_reference_idx ON conceptmap USING GIN (index_as_reference(content,'{source}'))
 CREATE INDEX medicationadministration_prescription_prescription_reference_idx ON medicationadministration USING GIN (index_as_reference(content,'{prescription}'))
 CREATE INDEX practitioner_phonetic_name_string_idx ON practitioner USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX composition_type_type_token_idx ON composition USING GIN (index_codeableconcept_as_token(content,'{type}'))
 CREATE INDEX profile_type_type_token_idx ON profile USING GIN (index_primitive_as_token(content,'{structure,type}'))
 CREATE INDEX documentmanifest_recipient_recipient_reference_idx ON documentmanifest USING GIN (index_as_reference(content,'{recipient}'))
 CREATE INDEX order_authority_authority_reference_idx ON "order" USING GIN (index_as_reference(content,'{authority}'))
 CREATE INDEX allergyintolerance_status_status_token_idx ON allergyintolerance USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX documentmanifest_description_description_string_idx ON documentmanifest USING GIN (index_as_string(content,'{description}'::text[]) gin_trgm_ops)
 CREATE INDEX condition_stage_summary_token_idx ON condition USING GIN (index_codeableconcept_as_token(content,'{stage,summary}'))
 CREATE INDEX documentmanifest_author_author_reference_idx ON documentmanifest USING GIN (index_as_reference(content,'{author}'))
 CREATE INDEX condition_encounter_encounter_reference_idx ON condition USING GIN (index_as_reference(content,'{encounter}'))
 CREATE INDEX substance_substance_substance_reference_idx ON substance USING GIN (index_as_reference(content,'{ingredient,substance}'))
 CREATE INDEX imagingstudy_series_uid_token_idx ON imagingstudy USING GIN (index_primitive_as_token(content,'{series,uid}'))
 CREATE INDEX relatedperson_identifier_identifier_token_idx ON relatedperson USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX conformance_status_status_token_idx ON conformance USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX documentmanifest_type_type_token_idx ON documentmanifest USING GIN (index_codeableconcept_as_token(content,'{type}'))
 CREATE INDEX conformance_software_name_string_idx ON conformance USING GIN (index_as_string(content,'{software,name}'::text[]) gin_trgm_ops)
 CREATE INDEX condition_asserter_asserter_reference_idx ON condition USING GIN (index_as_reference(content,'{asserter}'))
 CREATE INDEX organization_type_type_token_idx ON organization USING GIN (index_codeableconcept_as_token(content,'{type}'))
 CREATE INDEX immunizationrecommendation_status_forecaststatus_token_idx ON immunizationrecommendation USING GIN (index_codeableconcept_as_token(content,'{recommendation,forecastStatus}'))
 CREATE INDEX medicationstatement_medication_medication_reference_idx ON medicationstatement USING GIN (index_as_reference(content,'{medication}'))
 CREATE INDEX encounter_date_period_date_idx ON encounter USING GIST (index_as_date(content,'{period}'::text[], 'Period') range_ops)
 CREATE INDEX diagnosticreport_issued_issued_date_idx ON diagnosticreport USING GIST (index_as_date(content,'{issued}'::text[], 'dateTime') range_ops)
 CREATE INDEX diagnosticorder_event_status_status_token_idx ON diagnosticorder USING GIN (index_primitive_as_token(content,'{event,status}'))
 CREATE INDEX immunization_subject_subject_reference_idx ON immunization USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX practitioner_gender_gender_token_idx ON practitioner USING GIN (index_codeableconcept_as_token(content,'{gender}'))
 CREATE INDEX alert_subject_subject_reference_idx ON alert USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX relatedperson_name_name_string_idx ON relatedperson USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX condition_evidence_code_token_idx ON condition USING GIN (index_codeableconcept_as_token(content,'{evidence,code}'))
 CREATE INDEX careplan_participant_member_reference_idx ON careplan USING GIN (index_as_reference(content,'{participant,member}'))
 CREATE INDEX valueset_name_name_string_idx ON valueset USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX securityevent_site_site_token_idx ON securityevent USING GIN (index_primitive_as_token(content,'{source,site}'))
 CREATE INDEX supply_patient_patient_reference_idx ON supply USING GIN (index_as_reference(content,'{patient}'))
 CREATE INDEX imagingstudy_date_datetime_date_idx ON imagingstudy USING GIST (index_as_date(content,'{dateTime}'::text[], 'dateTime') range_ops)
 CREATE INDEX documentreference_location_location_string_idx ON documentreference USING GIN (index_as_string(content,'{location}'::text[]) gin_trgm_ops)
 CREATE INDEX immunizationrecommendation_subject_subject_reference_idx ON immunizationrecommendation USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX deviceobservationreport_channel_code_token_idx ON deviceobservationreport USING GIN (index_codeableconcept_as_token(content,'{virtualDevice,channel,code}'))
 CREATE INDEX profile_name_name_string_idx ON profile USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX conceptmap_dependson_concept_token_idx ON conceptmap USING GIN (index_primitive_as_token(content,'{concept,dependsOn,concept}'))
 CREATE INDEX supply_status_status_token_idx ON supply USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX patient_provider_managingorganization_reference_idx ON patient USING GIN (index_as_reference(content,'{managingOrganization}'))
 CREATE INDEX observation_value_string_valuecodeableconcept_string_idx ON observation USING GIN (index_as_string(content,'{valueCodeableConcept}'::text[]) gin_trgm_ops)
 CREATE INDEX immunizationrecommendation_date_date_date_idx ON immunizationrecommendation USING GIST (index_as_date(content,'{recommendation,date}'::text[], 'dateTime') range_ops)
 CREATE INDEX documentreference_relatesto_target_reference_idx ON documentreference USING GIN (index_as_reference(content,'{relatesTo,target}'))
 CREATE INDEX diagnosticorder_encounter_encounter_reference_idx ON diagnosticorder USING GIN (index_as_reference(content,'{encounter}'))
 CREATE INDEX diagnosticreport_performer_performer_reference_idx ON diagnosticreport USING GIN (index_as_reference(content,'{performer}'))
 CREATE INDEX deviceobservationreport_observation_observation_reference_idx ON deviceobservationreport USING GIN (index_as_reference(content,'{virtualDevice,channel,metric,observation}'))
 CREATE INDEX medication_manufacturer_manufacturer_reference_idx ON medication USING GIN (index_as_reference(content,'{manufacturer}'))
 CREATE INDEX device_udi_udi_string_idx ON device USING GIN (index_as_string(content,'{udi}'::text[]) gin_trgm_ops)
 CREATE INDEX securityevent_desc_name_string_idx ON securityevent USING GIN (index_as_string(content,'{object,name}'::text[]) gin_trgm_ops)
 CREATE INDEX composition_context_code_token_idx ON composition USING GIN (index_codeableconcept_as_token(content,'{event,code}'))
 CREATE INDEX securityevent_reference_reference_reference_idx ON securityevent USING GIN (index_as_reference(content,'{object,reference}'))
 CREATE INDEX immunization_performer_performer_reference_idx ON immunization USING GIN (index_as_reference(content,'{performer}'))
 CREATE INDEX specimen_subject_subject_reference_idx ON specimen USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX medicationadministration_status_status_token_idx ON medicationadministration USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX patient_birthdate_birthdate_date_idx ON patient USING GIST (index_as_date(content,'{birthDate}'::text[], 'dateTime') range_ops)
 CREATE INDEX medicationprescription_patient_patient_reference_idx ON medicationprescription USING GIN (index_as_reference(content,'{patient}'))
 CREATE INDEX medicationstatement_when_given_whengiven_date_idx ON medicationstatement USING GIST (index_as_date(content,'{whenGiven}'::text[], 'Period') range_ops)
 CREATE INDEX conformance_profile_profile_reference_idx ON conformance USING GIN (index_as_reference(content,'{rest,resource,profile}'))
 CREATE INDEX observation_value_string_valueattachment_string_idx ON observation USING GIN (index_as_string(content,'{valueAttachment}'::text[]) gin_trgm_ops)
 CREATE INDEX diagnosticorder_identifier_identifier_token_idx ON diagnosticorder USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX medicationprescription_medication_medication_reference_idx ON medicationprescription USING GIN (index_as_reference(content,'{medication}'))
 CREATE INDEX conceptmap_version_version_token_idx ON conceptmap USING GIN (index_primitive_as_token(content,'{version}'))
 CREATE INDEX condition_severity_severity_token_idx ON condition USING GIN (index_codeableconcept_as_token(content,'{severity}'))
 CREATE INDEX valueset_publisher_publisher_string_idx ON valueset USING GIN (index_as_string(content,'{publisher}'::text[]) gin_trgm_ops)
 CREATE INDEX medicationstatement_device_device_reference_idx ON medicationstatement USING GIN (index_as_reference(content,'{device}'))
 CREATE INDEX condition_subject_subject_reference_idx ON condition USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX documentreference_author_author_reference_idx ON documentreference USING GIN (index_as_reference(content,'{author}'))
 CREATE INDEX observation_value_string_valueperiod_string_idx ON observation USING GIN (index_as_string(content,'{valuePeriod}'::text[]) gin_trgm_ops)
 CREATE INDEX securityevent_action_action_token_idx ON securityevent USING GIN (index_primitive_as_token(content,'{event,action}'))
 CREATE INDEX practitioner_family_name_string_idx ON practitioner USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX media_subtype_subtype_token_idx ON media USING GIN (index_codeableconcept_as_token(content,'{subtype}'))
 CREATE INDEX medicationprescription_encounter_encounter_reference_idx ON medicationprescription USING GIN (index_as_reference(content,'{encounter}'))
 CREATE INDEX medication_code_code_token_idx ON medication USING GIN (index_codeableconcept_as_token(content,'{code}'))
 CREATE INDEX medicationstatement_identifier_identifier_token_idx ON medicationstatement USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX conformance_event_code_token_idx ON conformance USING GIN (index_coding_as_token(content,'{messaging,event,code}'))
 CREATE INDEX conceptmap_status_status_token_idx ON conceptmap USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX profile_publisher_publisher_string_idx ON profile USING GIN (index_as_string(content,'{publisher}'::text[]) gin_trgm_ops)
 CREATE INDEX immunization_refusal_reason_refusalreason_token_idx ON immunization USING GIN (index_codeableconcept_as_token(content,'{explanation,refusalReason}'))
 CREATE INDEX valueset_reference_system_token_idx ON valueset USING GIN (index_primitive_as_token(content,'{compose,include,system}'))
 CREATE INDEX order_date_date_date_idx ON "order" USING GIST (index_as_date(content,'{date}'::text[], 'dateTime') range_ops)
 CREATE INDEX medicationadministration_medication_medication_reference_idx ON medicationadministration USING GIN (index_as_reference(content,'{medication}'))
 CREATE INDEX device_manufacturer_manufacturer_string_idx ON device USING GIN (index_as_string(content,'{manufacturer}'::text[]) gin_trgm_ops)
 CREATE INDEX allergyintolerance_recorder_recorder_reference_idx ON allergyintolerance USING GIN (index_as_reference(content,'{recorder}'))
 CREATE INDEX other_subject_subject_reference_idx ON other USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX documentreference_subject_subject_reference_idx ON documentreference USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX device_organization_owner_reference_idx ON device USING GIN (index_as_reference(content,'{owner}'))
 CREATE INDEX diagnosticorder_item_status_status_token_idx ON diagnosticorder USING GIN (index_primitive_as_token(content,'{item,status}'))
 CREATE INDEX documentreference_language_primarylanguage_token_idx ON documentreference USING GIN (index_primitive_as_token(content,'{primaryLanguage}'))
 CREATE INDEX immunization_lot_number_lotnumber_string_idx ON immunization USING GIN (index_as_string(content,'{lotNumber}'::text[]) gin_trgm_ops)
 CREATE INDEX conformance_identifier_identifier_token_idx ON conformance USING GIN (index_primitive_as_token(content,'{identifier}'))
 CREATE INDEX composition_author_author_reference_idx ON composition USING GIN (index_as_reference(content,'{author}'))
 CREATE INDEX careplan_patient_patient_reference_idx ON careplan USING GIN (index_as_reference(content,'{patient}'))
 CREATE INDEX substance_expiry_expiry_date_idx ON substance USING GIST (index_as_date(content,'{instance,expiry}'::text[], 'dateTime') range_ops)
 CREATE INDEX composition_identifier_identifier_token_idx ON composition USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX observation_date_appliesdatetime_date_idx ON observation USING GIST (index_as_date(content,'{appliesdateTime}'::text[], 'dateTime') range_ops)
 CREATE INDEX documentreference_status_status_token_idx ON documentreference USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX organization_active_active_token_idx ON organization USING GIN (index_primitive_as_token(content,'{active}'))
 CREATE INDEX medicationprescription_datewritten_datewritten_date_idx ON medicationprescription USING GIST (index_as_date(content,'{dateWritten}'::text[], 'dateTime') range_ops)
 CREATE INDEX orderresponse_fulfillment_fulfillment_reference_idx ON orderresponse USING GIN (index_as_reference(content,'{fulfillment}'))
 CREATE INDEX media_operator_operator_reference_idx ON media USING GIN (index_as_reference(content,'{operator}'))
 CREATE INDEX valueset_system_system_token_idx ON valueset USING GIN (index_primitive_as_token(content,'{define,system}'))
 CREATE INDEX diagnosticreport_request_requestdetail_reference_idx ON diagnosticreport USING GIN (index_as_reference(content,'{requestDetail}'))
 CREATE INDEX observation_performer_performer_reference_idx ON observation USING GIN (index_as_reference(content,'{performer}'))
 CREATE INDEX deviceobservationreport_source_source_reference_idx ON deviceobservationreport USING GIN (index_as_reference(content,'{source}'))
 CREATE INDEX practitioner_address_address_string_idx ON practitioner USING GIN (index_as_string(content,'{address}'::text[]) gin_trgm_ops)
 CREATE INDEX medicationdispense_medication_medication_reference_idx ON medicationdispense USING GIN (index_as_reference(content,'{dispense,medication}'))
 CREATE INDEX medicationdispense_type_type_token_idx ON medicationdispense USING GIN (index_codeableconcept_as_token(content,'{dispense,type}'))
 CREATE INDEX medicationdispense_prescription_authorizingprescription_reference_idx ON medicationdispense USING GIN (index_as_reference(content,'{authorizingPrescription}'))
 CREATE INDEX allergyintolerance_substance_substance_reference_idx ON allergyintolerance USING GIN (index_as_reference(content,'{substance}'))
 CREATE INDEX device_patient_patient_reference_idx ON device USING GIN (index_as_reference(content,'{patient}'))
 CREATE INDEX immunization_reaction_detail_reference_idx ON immunization USING GIN (index_as_reference(content,'{reaction,detail}'))
 CREATE INDEX encounter_indication_indication_reference_idx ON encounter USING GIN (index_as_reference(content,'{indication}'))
 CREATE INDEX device_location_location_reference_idx ON device USING GIN (index_as_reference(content,'{location}'))
 CREATE INDEX supply_identifier_identifier_token_idx ON supply USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX media_view_view_token_idx ON media USING GIN (index_codeableconcept_as_token(content,'{view}'))
 CREATE INDEX securityevent_altid_altid_token_idx ON securityevent USING GIN (index_primitive_as_token(content,'{participant,altId}'))
 CREATE INDEX questionnaire_authored_authored_date_idx ON questionnaire USING GIST (index_as_date(content,'{authored}'::text[], 'dateTime') range_ops)
 CREATE INDEX conceptmap_identifier_identifier_token_idx ON conceptmap USING GIN (index_primitive_as_token(content,'{identifier}'))
 CREATE INDEX conformance_description_description_string_idx ON conformance USING GIN (index_as_string(content,'{description}'::text[]) gin_trgm_ops)
 CREATE INDEX diagnosticreport_service_servicecategory_token_idx ON diagnosticreport USING GIN (index_codeableconcept_as_token(content,'{serviceCategory}'))
 CREATE INDEX medication_content_item_reference_idx ON medication USING GIN (index_as_reference(content,'{package,content,item}'))
 CREATE INDEX questionnaire_identifier_identifier_token_idx ON questionnaire USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX encounter_identifier_identifier_token_idx ON encounter USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX supply_supplier_supplier_reference_idx ON supply USING GIN (index_as_reference(content,'{dispense,supplier}'))
 CREATE INDEX medication_container_container_token_idx ON medication USING GIN (index_codeableconcept_as_token(content,'{package,container}'))
 CREATE INDEX order_detail_detail_reference_idx ON "order" USING GIN (index_as_reference(content,'{detail}'))
 CREATE INDEX documentmanifest_status_status_token_idx ON documentmanifest USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX relatedperson_patient_patient_reference_idx ON relatedperson USING GIN (index_as_reference(content,'{patient}'))
 CREATE INDEX observation_value_concept_valuecodeableconcept_token_idx ON observation USING GIN (index_codeableconcept_as_token(content,'{valueCodeableConcept}'))
 CREATE INDEX diagnosticreport_specimen_specimen_reference_idx ON diagnosticreport USING GIN (index_as_reference(content,'{specimen}'))
 CREATE INDEX adversereaction_date_date_date_idx ON adversereaction USING GIST (index_as_date(content,'{date}'::text[], 'dateTime') range_ops)
 CREATE INDEX query_identifier_identifier_token_idx ON query USING GIN (index_primitive_as_token(content,'{identifier}'))
 CREATE INDEX documentreference_confidentiality_confidentiality_token_idx ON documentreference USING GIN (index_codeableconcept_as_token(content,'{confidentiality}'))
 CREATE INDEX medicationdispense_dispenser_dispenser_reference_idx ON medicationdispense USING GIN (index_as_reference(content,'{dispenser}'))
 CREATE INDEX orderresponse_code_code_token_idx ON orderresponse USING GIN (index_primitive_as_token(content,'{code}'))
 CREATE INDEX list_source_source_reference_idx ON list USING GIN (index_as_reference(content,'{source}'))
 CREATE INDEX medicationdispense_destination_destination_reference_idx ON medicationdispense USING GIN (index_as_reference(content,'{dispense,destination}'))
 CREATE INDEX group_exclude_exclude_token_idx ON "group" USING GIN (index_primitive_as_token(content,'{characteristic,exclude}'))
 CREATE INDEX conformance_version_version_token_idx ON conformance USING GIN (index_primitive_as_token(content,'{version}'))
 CREATE INDEX imagingstudy_modality_modality_token_idx ON imagingstudy USING GIN (index_primitive_as_token(content,'{series,modality}'))
 CREATE INDEX patient_name_name_string_idx ON patient USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX condition_onset_onsetdate_date_idx ON condition USING GIST (index_as_date(content,'{onsetdate}'::text[], 'date') range_ops)
 CREATE INDEX location_name_name_string_idx ON location USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX conceptmap_date_date_date_idx ON conceptmap USING GIST (index_as_date(content,'{date}'::text[], 'dateTime') range_ops)
 CREATE INDEX condition_code_code_token_idx ON condition USING GIN (index_codeableconcept_as_token(content,'{code}'))
 CREATE INDEX familyhistory_subject_subject_reference_idx ON familyhistory USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX conceptmap_description_description_string_idx ON conceptmap USING GIN (index_as_string(content,'{description}'::text[]) gin_trgm_ops)
 CREATE INDEX orderresponse_date_date_date_idx ON orderresponse USING GIST (index_as_date(content,'{date}'::text[], 'dateTime') range_ops)
 CREATE INDEX location_partof_partof_reference_idx ON location USING GIN (index_as_reference(content,'{partOf}'))
 CREATE INDEX observation_name_name_token_idx ON observation USING GIN (index_codeableconcept_as_token(content,'{name}'))
 CREATE INDEX medicationadministration_device_device_reference_idx ON medicationadministration USING GIN (index_as_reference(content,'{device}'))
 CREATE INDEX allergyintolerance_date_recordeddate_date_idx ON allergyintolerance USING GIST (index_as_date(content,'{recordedDate}'::text[], 'dateTime') range_ops)
 CREATE INDEX documentmanifest_created_created_date_idx ON documentmanifest USING GIST (index_as_date(content,'{created}'::text[], 'dateTime') range_ops)
 CREATE INDEX questionnaire_name_name_token_idx ON questionnaire USING GIN (index_codeableconcept_as_token(content,'{name}'))
 CREATE INDEX group_type_type_token_idx ON "group" USING GIN (index_primitive_as_token(content,'{type}'))
 CREATE INDEX diagnosticreport_date_diagnosticdatetime_date_idx ON diagnosticreport USING GIST (index_as_date(content,'{diagnosticdateTime}'::text[], 'dateTime') range_ops)
 CREATE INDEX patient_identifier_identifier_token_idx ON patient USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX observation_related_type_type_token_idx ON observation USING GIN (index_primitive_as_token(content,'{related,type}'))
 CREATE INDEX imagingstudy_accession_accessionno_token_idx ON imagingstudy USING GIN (index_identifier_as_token(content,'{accessionNo}'))
 CREATE INDEX patient_animal_species_species_token_idx ON patient USING GIN (index_codeableconcept_as_token(content,'{animal,species}'))
 CREATE INDEX immunizationrecommendation_information_supportingpatientinformation_reference_idx ON immunizationrecommendation USING GIN (index_as_reference(content,'{recommendation,supportingPatientInformation}'))
 CREATE INDEX questionnaire_encounter_encounter_reference_idx ON questionnaire USING GIN (index_as_reference(content,'{encounter}'))
 CREATE INDEX immunization_requester_requester_reference_idx ON immunization USING GIN (index_as_reference(content,'{requester}'))
 CREATE INDEX order_source_source_reference_idx ON "order" USING GIN (index_as_reference(content,'{source}'))
 CREATE INDEX diagnosticreport_subject_subject_reference_idx ON diagnosticreport USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX procedure_type_type_token_idx ON procedure USING GIN (index_codeableconcept_as_token(content,'{type}'))
 CREATE INDEX patient_telecom_telecom_string_idx ON patient USING GIN (index_as_string(content,'{telecom}'::text[]) gin_trgm_ops)
 CREATE INDEX deviceobservationreport_code_code_token_idx ON deviceobservationreport USING GIN (index_codeableconcept_as_token(content,'{virtualDevice,code}'))
 CREATE INDEX securityevent_identity_identifier_token_idx ON securityevent USING GIN (index_identifier_as_token(content,'{object,identifier}'))
 CREATE INDEX conceptmap_name_name_string_idx ON conceptmap USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX immunization_location_location_reference_idx ON immunization USING GIN (index_as_reference(content,'{location}'))
 CREATE INDEX medication_form_form_token_idx ON medication USING GIN (index_codeableconcept_as_token(content,'{product,form}'))
 CREATE INDEX practitioner_organization_organization_reference_idx ON practitioner USING GIN (index_as_reference(content,'{organization}'))
 CREATE INDEX provenance_party_reference_token_idx ON provenance USING GIN (index_primitive_as_token(content,'{agent,reference}'))
 CREATE INDEX diagnosticorder_subject_subject_reference_idx ON diagnosticorder USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX location_type_type_token_idx ON location USING GIN (index_codeableconcept_as_token(content,'{type}'))
 CREATE INDEX other_code_code_token_idx ON other USING GIN (index_codeableconcept_as_token(content,'{code}'))
 CREATE INDEX procedure_subject_subject_reference_idx ON procedure USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX immunization_refused_refusedindicator_token_idx ON immunization USING GIN (index_primitive_as_token(content,'{refusedIndicator}'))
 CREATE INDEX composition_date_date_date_idx ON composition USING GIST (index_as_date(content,'{date}'::text[], 'dateTime') range_ops)
 CREATE INDEX other_created_created_date_idx ON other USING GIST (index_as_date(content,'{created}'::text[], 'date') range_ops)
 CREATE INDEX immunizationrecommendation_support_supportingimmunization_reference_idx ON immunizationrecommendation USING GIN (index_as_reference(content,'{recommendation,supportingImmunization}'))
 CREATE INDEX medicationdispense_status_status_token_idx ON medicationdispense USING GIN (index_primitive_as_token(content,'{dispense,status}'))
 CREATE INDEX careplan_activitydetail_detail_reference_idx ON careplan USING GIN (index_as_reference(content,'{activity,detail}'))
 CREATE INDEX patient_active_active_token_idx ON patient USING GIN (index_primitive_as_token(content,'{active}'))
 CREATE INDEX conformance_publisher_publisher_string_idx ON conformance USING GIN (index_as_string(content,'{publisher}'::text[]) gin_trgm_ops)
 CREATE INDEX organization_name_name_string_idx ON organization USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX composition_class_class_token_idx ON composition USING GIN (index_codeableconcept_as_token(content,'{class}'))
 CREATE INDEX composition_section_type_code_token_idx ON composition USING GIN (index_codeableconcept_as_token(content,'{section,code}'))
 CREATE INDEX profile_identifier_identifier_token_idx ON profile USING GIN (index_primitive_as_token(content,'{identifier}'))
 CREATE INDEX order_when_schedule_date_idx ON "order" USING GIST (index_as_date(content,'{when,schedule}'::text[], 'Schedule') range_ops)
 CREATE INDEX diagnosticorder_status_status_token_idx ON diagnosticorder USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX medicationadministration_whengiven_whengiven_date_idx ON medicationadministration USING GIST (index_as_date(content,'{whenGiven}'::text[], 'Period') range_ops)
 CREATE INDEX orderresponse_request_request_reference_idx ON orderresponse USING GIN (index_as_reference(content,'{request}'))
 CREATE INDEX list_date_date_date_idx ON list USING GIST (index_as_date(content,'{date}'::text[], 'dateTime') range_ops)
 CREATE INDEX procedure_date_date_date_idx ON procedure USING GIST (index_as_date(content,'{date}'::text[], 'Period') range_ops)
 CREATE INDEX medicationadministration_patient_patient_reference_idx ON medicationadministration USING GIN (index_as_reference(content,'{patient}'))
 CREATE INDEX patient_gender_gender_token_idx ON patient USING GIN (index_codeableconcept_as_token(content,'{gender}'))
 CREATE INDEX diagnosticreport_result_result_reference_idx ON diagnosticreport USING GIN (index_as_reference(content,'{result}'))
 CREATE INDEX group_characteristic_code_token_idx ON "group" USING GIN (index_codeableconcept_as_token(content,'{characteristic,code}'))
 CREATE INDEX orderresponse_who_who_reference_idx ON orderresponse USING GIN (index_as_reference(content,'{who}'))
 CREATE INDEX securityevent_object_type_type_token_idx ON securityevent USING GIN (index_primitive_as_token(content,'{object,type}'))
 CREATE INDEX immunizationrecommendation_identifier_identifier_token_idx ON immunizationrecommendation USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX valueset_version_version_token_idx ON valueset USING GIN (index_primitive_as_token(content,'{version}'))
 CREATE INDEX medicationadministration_encounter_encounter_reference_idx ON medicationadministration USING GIN (index_as_reference(content,'{encounter}'))
 CREATE INDEX device_type_type_token_idx ON device USING GIN (index_codeableconcept_as_token(content,'{type}'))
 CREATE INDEX provenance_end_end_date_idx ON provenance USING GIST (index_as_date(content,'{period,end}'::text[], 'dateTime') range_ops)
 CREATE INDEX medicationdispense_patient_patient_reference_idx ON medicationdispense USING GIN (index_as_reference(content,'{patient}'))
 CREATE INDEX diagnosticorder_event_date_datetime_date_idx ON diagnosticorder USING GIST (index_as_date(content,'{event,dateTime}'::text[], 'dateTime') range_ops)
 CREATE INDEX adversereaction_substance_substance_reference_idx ON adversereaction USING GIN (index_as_reference(content,'{exposure,substance}'))
 CREATE INDEX securityevent_name_name_string_idx ON securityevent USING GIN (index_as_string(content,'{participant,name}'::text[]) gin_trgm_ops)
 CREATE INDEX securityevent_user_userid_token_idx ON securityevent USING GIN (index_primitive_as_token(content,'{participant,userId}'))
 CREATE INDEX conformance_resource_type_token_idx ON conformance USING GIN (index_primitive_as_token(content,'{rest,resource,type}'))
 CREATE INDEX observation_date_appliesperiod_date_idx ON observation USING GIST (index_as_date(content,'{appliesPeriod}'::text[], 'Period') range_ops)
 CREATE INDEX documentmanifest_content_content_reference_idx ON documentmanifest USING GIN (index_as_reference(content,'{content}'))
 CREATE INDEX list_code_code_token_idx ON list USING GIN (index_codeableconcept_as_token(content,'{code}'))
 CREATE INDEX observation_reliability_reliability_token_idx ON observation USING GIN (index_primitive_as_token(content,'{reliability}'))
 CREATE INDEX conformance_format_format_token_idx ON conformance USING GIN (index_primitive_as_token(content,'{format}'))
 CREATE INDEX location_status_status_token_idx ON location USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX diagnosticreport_image_link_reference_idx ON diagnosticreport USING GIN (index_as_reference(content,'{image,link}'))
 CREATE INDEX list_empty_reason_emptyreason_token_idx ON list USING GIN (index_codeableconcept_as_token(content,'{emptyReason}'))
 CREATE INDEX careplan_condition_concern_reference_idx ON careplan USING GIN (index_as_reference(content,'{concern}'))
 CREATE INDEX observation_value_string_valuequantity_string_idx ON observation USING GIN (index_as_string(content,'{valueQuantity}'::text[]) gin_trgm_ops)
 CREATE INDEX careplan_activitydate_timingperiod_date_idx ON careplan USING GIST (index_as_date(content,'{activity,simple,timingPeriod}'::text[], 'Period') range_ops)
 CREATE INDEX observation_specimen_specimen_reference_idx ON observation USING GIN (index_as_reference(content,'{specimen}'))
 CREATE INDEX profile_description_description_string_idx ON profile USING GIN (index_as_string(content,'{description}'::text[]) gin_trgm_ops)
 CREATE INDEX imagingstudy_study_uid_token_idx ON imagingstudy USING GIN (index_primitive_as_token(content,'{uid}'))
 CREATE INDEX medicationprescription_identifier_identifier_token_idx ON medicationprescription USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX observation_value_date_valueperiod_date_idx ON observation USING GIST (index_as_date(content,'{valuePeriod}'::text[], 'Period') range_ops)
 CREATE INDEX immunization_date_date_date_idx ON immunization USING GIST (index_as_date(content,'{date}'::text[], 'dateTime') range_ops)
 CREATE INDEX allergyintolerance_type_sensitivitytype_token_idx ON allergyintolerance USING GIN (index_primitive_as_token(content,'{sensitivityType}'))
 CREATE INDEX profile_version_version_token_idx ON profile USING GIN (index_primitive_as_token(content,'{version}'))
 CREATE INDEX careplan_date_period_date_idx ON careplan USING GIST (index_as_date(content,'{period}'::text[], 'Period') range_ops)
 CREATE INDEX patient_animal_breed_breed_token_idx ON patient USING GIN (index_codeableconcept_as_token(content,'{animal,breed}'))
 CREATE INDEX immunization_identifier_identifier_token_idx ON immunization USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX query_response_identifier_token_idx ON query USING GIN (index_primitive_as_token(content,'{response,identifier}'))
 CREATE INDEX medicationprescription_status_status_token_idx ON medicationprescription USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX medicationdispense_responsibleparty_responsibleparty_reference_idx ON medicationdispense USING GIN (index_as_reference(content,'{substitution,responsibleParty}'))
 CREATE INDEX imagingstudy_bodysite_bodysite_token_idx ON imagingstudy USING GIN (index_coding_as_token(content,'{series,bodySite}'))
 CREATE INDEX conformance_mode_mode_token_idx ON conformance USING GIN (index_primitive_as_token(content,'{rest,mode}'))
 CREATE INDEX documentreference_authenticator_authenticator_reference_idx ON documentreference USING GIN (index_as_reference(content,'{authenticator}'))
 CREATE INDEX documentreference_event_event_token_idx ON documentreference USING GIN (index_codeableconcept_as_token(content,'{context,event}'))
 CREATE INDEX observation_related_target_target_reference_idx ON observation USING GIN (index_as_reference(content,'{related,target}'))
 CREATE INDEX group_code_code_token_idx ON "group" USING GIN (index_codeableconcept_as_token(content,'{code}'))
 CREATE INDEX careplan_activitycode_code_token_idx ON careplan USING GIN (index_codeableconcept_as_token(content,'{activity,simple,code}'))
 CREATE INDEX securityevent_address_identifier_token_idx ON securityevent USING GIN (index_primitive_as_token(content,'{participant,network,identifier}'))
 CREATE INDEX relatedperson_address_address_string_idx ON relatedperson USING GIN (index_as_string(content,'{address}'::text[]) gin_trgm_ops)
 CREATE INDEX valueset_code_code_token_idx ON valueset USING GIN (index_primitive_as_token(content,'{define,concept,code}'))
 CREATE INDEX questionnaire_author_author_reference_idx ON questionnaire USING GIN (index_as_reference(content,'{author}'))
 CREATE INDEX diagnosticreport_date_diagnosticperiod_date_idx ON diagnosticreport USING GIST (index_as_date(content,'{diagnosticPeriod}'::text[], 'Period') range_ops)
 CREATE INDEX documentreference_description_description_string_idx ON documentreference USING GIN (index_as_string(content,'{description}'::text[]) gin_trgm_ops)
 CREATE INDEX group_actual_actual_token_idx ON "group" USING GIN (index_primitive_as_token(content,'{actual}'))
 CREATE INDEX order_target_target_reference_idx ON "order" USING GIN (index_as_reference(content,'{target}'))
 CREATE INDEX media_identifier_identifier_token_idx ON media USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX documentreference_type_type_token_idx ON documentreference USING GIN (index_codeableconcept_as_token(content,'{type}'))
 CREATE INDEX provenance_target_target_reference_idx ON provenance USING GIN (index_as_reference(content,'{target}'))
 CREATE INDEX documentreference_relation_code_token_idx ON documentreference USING GIN (index_primitive_as_token(content,'{relatesTo,code}'))
 CREATE INDEX observation_value_string_valuestring_string_idx ON observation USING GIN (index_as_string(content,'{valuestring}'::text[]) gin_trgm_ops)
 CREATE INDEX imagingstudy_dicom_class_sopclass_token_idx ON imagingstudy USING GIN (index_primitive_as_token(content,'{series,instance,sopclass}'))
 CREATE INDEX condition_related_item_target_reference_idx ON condition USING GIN (index_as_reference(content,'{relatedItem,target}'))
 CREATE INDEX valueset_date_date_date_idx ON valueset USING GIST (index_as_date(content,'{date}'::text[], 'dateTime') range_ops)
 CREATE INDEX organization_identifier_identifier_token_idx ON organization USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX device_model_model_string_idx ON device USING GIN (index_as_string(content,'{model}'::text[]) gin_trgm_ops)
 CREATE INDEX medication_ingredient_item_reference_idx ON medication USING GIN (index_as_reference(content,'{product,ingredient,item}'))
 CREATE INDEX careplan_activitydate_timingschedule_date_idx ON careplan USING GIST (index_as_date(content,'{activity,simple,timingSchedule}'::text[], 'Schedule') range_ops)
 CREATE INDEX questionnaire_subject_subject_reference_idx ON questionnaire USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX conceptmap_system_system_token_idx ON conceptmap USING GIN (index_primitive_as_token(content,'{concept,map,system}'))
 CREATE INDEX provenance_location_location_reference_idx ON provenance USING GIN (index_as_reference(content,'{location}'))
 CREATE INDEX diagnosticreport_identifier_identifier_token_idx ON diagnosticreport USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX observation_status_status_token_idx ON observation USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX group_identifier_identifier_token_idx ON "group" USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX list_item_item_reference_idx ON list USING GIN (index_as_reference(content,'{entry,item}'))
 CREATE INDEX device_identifier_identifier_token_idx ON device USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX composition_attester_party_reference_idx ON composition USING GIN (index_as_reference(content,'{attester,party}'))
 CREATE INDEX substance_identifier_identifier_token_idx ON substance USING GIN (index_identifier_as_token(content,'{instance,identifier}'))
 CREATE INDEX condition_date_asserted_dateasserted_date_idx ON condition USING GIST (index_as_date(content,'{dateAsserted}'::text[], 'date') range_ops)
 CREATE INDEX media_date_datetime_date_idx ON media USING GIST (index_as_date(content,'{dateTime}'::text[], 'dateTime') range_ops)
 CREATE INDEX provenance_partytype_type_token_idx ON provenance USING GIN (index_coding_as_token(content,'{agent,type}'))
 CREATE INDEX observation_subject_subject_reference_idx ON observation USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX diagnosticorder_orderer_orderer_reference_idx ON diagnosticorder USING GIN (index_as_reference(content,'{orderer}'))
 CREATE INDEX securityevent_source_identifier_token_idx ON securityevent USING GIN (index_primitive_as_token(content,'{source,identifier}'))
 CREATE INDEX conformance_supported_profile_profile_reference_idx ON conformance USING GIN (index_as_reference(content,'{profile}'))
 CREATE INDEX documentreference_custodian_custodian_reference_idx ON documentreference USING GIN (index_as_reference(content,'{custodian}'))
 CREATE INDEX immunization_reaction_date_date_date_idx ON immunization USING GIST (index_as_date(content,'{reaction,date}'::text[], 'dateTime') range_ops)
 CREATE INDEX practitioner_given_name_string_idx ON practitioner USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX conceptmap_target_target_reference_idx ON conceptmap USING GIN (index_as_reference(content,'{target}'))
 CREATE INDEX documentmanifest_confidentiality_confidentiality_token_idx ON documentmanifest USING GIN (index_codeableconcept_as_token(content,'{confidentiality}'))
 CREATE INDEX group_value_valueboolean_token_idx ON "group" USING GIN (index_primitive_as_token(content,'{characteristic,valueboolean}'))
 CREATE INDEX diagnosticorder_code_code_token_idx ON diagnosticorder USING GIN (index_codeableconcept_as_token(content,'{item,code}'))
 CREATE INDEX encounter_status_status_token_idx ON encounter USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX documentreference_format_format_token_idx ON documentreference USING GIN (index_primitive_as_token(content,'{format}'))
 CREATE INDEX profile_status_status_token_idx ON profile USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX encounter_location_location_reference_idx ON encounter USING GIN (index_as_reference(content,'{location,location}'))
 CREATE INDEX patient_address_address_string_idx ON patient USING GIN (index_as_string(content,'{address}'::text[]) gin_trgm_ops)
 CREATE INDEX questionnaire_status_status_token_idx ON questionnaire USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX documentreference_created_created_date_idx ON documentreference USING GIST (index_as_date(content,'{created}'::text[], 'dateTime') range_ops)
 CREATE INDEX location_identifier_identifier_token_idx ON location USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX immunizationrecommendation_vaccine_type_vaccinetype_token_idx ON immunizationrecommendation USING GIN (index_codeableconcept_as_token(content,'{recommendation,vaccineType}'))
 CREATE INDEX conformance_name_name_string_idx ON conformance USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX adversereaction_subject_subject_reference_idx ON adversereaction USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX diagnosticreport_name_name_token_idx ON diagnosticreport USING GIN (index_codeableconcept_as_token(content,'{name}'))
 CREATE INDEX valueset_description_description_string_idx ON valueset USING GIN (index_as_string(content,'{description}'::text[]) gin_trgm_ops)
 CREATE INDEX profile_valueset_referenceresourcereference_reference_idx ON profile USING GIN (index_as_reference(content,'{structure,element,definition,binding,referenceResourceReference}'))
 CREATE INDEX profile_date_date_date_idx ON profile USING GIST (index_as_date(content,'{date}'::text[], 'dateTime') range_ops)
 CREATE INDEX adversereaction_symptom_code_token_idx ON adversereaction USING GIN (index_codeableconcept_as_token(content,'{symptom,code}'))
 CREATE INDEX encounter_subject_subject_reference_idx ON encounter USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX medicationdispense_whenhandedover_whenhandedover_date_idx ON medicationdispense USING GIST (index_as_date(content,'{dispense,whenHandedOver}'::text[], 'dateTime') range_ops)
 CREATE INDEX deviceobservationreport_subject_subject_reference_idx ON deviceobservationreport USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX allergyintolerance_subject_subject_reference_idx ON allergyintolerance USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX condition_related_code_code_token_idx ON condition USING GIN (index_codeableconcept_as_token(content,'{relatedItem,code}'))
 CREATE INDEX condition_location_code_token_idx ON condition USING GIN (index_codeableconcept_as_token(content,'{location,code}'))
 CREATE INDEX immunization_reason_reason_token_idx ON immunization USING GIN (index_codeableconcept_as_token(content,'{explanation,reason}'))
 CREATE INDEX patient_language_communication_token_idx ON patient USING GIN (index_codeableconcept_as_token(content,'{communication}'))
 CREATE INDEX medicationstatement_patient_patient_reference_idx ON medicationstatement USING GIN (index_as_reference(content,'{patient}'))
 CREATE INDEX supply_kind_kind_token_idx ON supply USING GIN (index_codeableconcept_as_token(content,'{kind}'))
 CREATE INDEX documentreference_class_class_token_idx ON documentreference USING GIN (index_codeableconcept_as_token(content,'{class}'))
 CREATE INDEX profile_code_code_token_idx ON profile USING GIN (index_coding_as_token(content,'{code}'))
 CREATE INDEX immunization_vaccine_type_vaccinetype_token_idx ON immunization USING GIN (index_codeableconcept_as_token(content,'{vaccineType}'))
 CREATE INDEX immunization_manufacturer_manufacturer_reference_idx ON immunization USING GIN (index_as_reference(content,'{manufacturer}'))
 CREATE INDEX order_when_code_code_token_idx ON "order" USING GIN (index_codeableconcept_as_token(content,'{when,code}'))
 CREATE INDEX patient_link_other_reference_idx ON patient USING GIN (index_as_reference(content,'{link,other}'))
 CREATE INDEX conceptmap_publisher_publisher_string_idx ON conceptmap USING GIN (index_as_string(content,'{publisher}'::text[]) gin_trgm_ops)
 CREATE INDEX documentreference_indexed_indexed_date_idx ON documentreference USING GIST (index_as_date(content,'{indexed}'::text[], 'instant') range_ops)
 CREATE INDEX imagingstudy_subject_subject_reference_idx ON imagingstudy USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX group_value_valuecodeableconcept_token_idx ON "group" USING GIN (index_codeableconcept_as_token(content,'{characteristic,valueCodeableConcept}'))
 CREATE INDEX substance_type_type_token_idx ON substance USING GIN (index_codeableconcept_as_token(content,'{type}'))
 CREATE INDEX securityevent_subtype_subtype_token_idx ON securityevent USING GIN (index_codeableconcept_as_token(content,'{event,subtype}'))
 CREATE INDEX documentreference_period_period_date_idx ON documentreference USING GIST (index_as_date(content,'{context,period}'::text[], 'Period') range_ops)
 CREATE INDEX documentreference_facility_facilitytype_token_idx ON documentreference USING GIN (index_codeableconcept_as_token(content,'{context,facilityType}'))
 CREATE INDEX documentmanifest_subject_subject_reference_idx ON documentmanifest USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX list_subject_subject_reference_idx ON list USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX medicationadministration_notgiven_wasnotgiven_token_idx ON medicationadministration USING GIN (index_primitive_as_token(content,'{wasNotGiven}'))
 CREATE INDEX observation_value_string_valueratio_string_idx ON observation USING GIN (index_as_string(content,'{valueRatio}'::text[]) gin_trgm_ops)
 CREATE INDEX valueset_status_status_token_idx ON valueset USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX conformance_fhirversion_version_token_idx ON conformance USING GIN (index_primitive_as_token(content,'{version}'))
 CREATE INDEX practitioner_telecom_telecom_string_idx ON practitioner USING GIN (index_as_string(content,'{telecom}'::text[]) gin_trgm_ops)
 CREATE INDEX conceptmap_product_concept_token_idx ON conceptmap USING GIN (index_primitive_as_token(content,'{concept,map,product,concept}'))
 CREATE INDEX composition_section_content_content_reference_idx ON composition USING GIN (index_as_reference(content,'{section,content}'))
 CREATE INDEX practitioner_identifier_identifier_token_idx ON practitioner USING GIN (index_identifier_as_token(content,'{identifier}'))
 CREATE INDEX encounter_location_period_period_date_idx ON encounter USING GIST (index_as_date(content,'{location,period}'::text[], 'Period') range_ops)
 CREATE INDEX profile_extension_code_token_idx ON profile USING GIN (index_primitive_as_token(content,'{extensionDefn,code}'))
 CREATE INDEX diagnosticorder_item_past_status_status_token_idx ON diagnosticorder USING GIN (index_primitive_as_token(content,'{item,event,status}'))
 CREATE INDEX patient_given_given_string_idx ON patient USING GIN (index_as_string(content,'{name,given}'::text[]) gin_trgm_ops)
 CREATE INDEX observation_value_concept_valuestring_token_idx ON observation USING GIN (index_primitive_as_token(content,'{valuestring}'))
 CREATE INDEX group_member_member_reference_idx ON "group" USING GIN (index_as_reference(content,'{member}'))
 CREATE INDEX diagnosticreport_status_status_token_idx ON diagnosticreport USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX supply_dispensestatus_status_token_idx ON supply USING GIN (index_primitive_as_token(content,'{dispense,status}'))
 CREATE INDEX condition_status_status_token_idx ON condition USING GIN (index_primitive_as_token(content,'{status}'))
 CREATE INDEX medication_name_name_string_idx ON medication USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX relatedperson_gender_gender_token_idx ON relatedperson USING GIN (index_codeableconcept_as_token(content,'{gender}'))
 CREATE INDEX practitioner_name_name_string_idx ON practitioner USING GIN (index_as_string(content,'{name}'::text[]) gin_trgm_ops)
 CREATE INDEX composition_subject_subject_reference_idx ON composition USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX securityevent_date_datetime_date_idx ON securityevent USING GIST (index_as_date(content,'{event,dateTime}'::text[], 'instant') range_ops)
 CREATE INDEX valueset_identifier_identifier_token_idx ON valueset USING GIN (index_primitive_as_token(content,'{identifier}'))
 CREATE INDEX order_subject_subject_reference_idx ON "order" USING GIN (index_as_reference(content,'{subject}'))
 CREATE INDEX location_address_address_string_idx ON location USING GIN (index_as_string(content,'{address}'::text[]) gin_trgm_ops)
 CREATE INDEX supply_dispenseid_identifier_token_idx ON supply USING GIN (index_identifier_as_token(content,'{dispense,identifier}'))
 CREATE INDEX patient_family_family_string_idx ON patient USING GIN (index_as_string(content,'{name,family}'::text[]) gin_trgm_ops)
(375 rows)

