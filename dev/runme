#!/bin/bash

if [ -z "$DB" ]; then
  echo "Need to set DB='fhirb'"
  DB='fhirb'
fi

if [ -z "$PSQL_ARGS" ]; then
  echo "Need to set PSQL_ARGS='-h localhost'"
  PSQL_ARGS='-h localhost'
fi

function help_cmd {
    cat <<EOF
    Usage: $0 [-c config_file.sh] [command] [args]

    FHIRbase developer tool

    Available commands:

    -h || help                this help text
    install dbname            generate and install fhirbase schema into specified DB
    integrate                 generate  test db and run tests
    test                      run tests
    build                     build fhirbase.sql file
EOF
}

function install_cmd {
  DB=$1
  echo "DROP DATABASE IF EXISTS $DB; CREATE DATABASE $DB;" | psql $PSQL_ARGS -d postgres;
  for scrpt in `ls *sql`; do
    echo "Execute: $scrpt ..."
    cat $scrpt | psql $PSQL_ARGS -d $DB -1
  done
}

function test_cmd {
  echo "Run tests"
  failed=()
  outdir="/tmp/fhirbase-tests"

  rm -rf $outdir
  mkdir $outdir
  for script in `ls test/*_test.sql`; do
    nm=`basename $script`
    example="expected/$nm.out"
    out="$outdir/$nm.out"
    echo "run $nm"
    cat $script | psql $PSQL_ARGS -e -d $DB > $out
    if diff -Bb $out $example
    then
      echo -e "\e[00;32m"
      echo "OK"
      echo -e "\e[00m"
    else
      echo -e "\e[00;31m"
      failed+=$script
      diff -Bb -y $out $example
      echo -e "\e[00m"
    fi
  done
  echo '-----------------------------'
  if [ ${#failed[@]} -eq 0 ]; then
    echo -e "\e[00;32m"
    echo "Tests passed"
  else
    echo -e "\e[00;31m"
    echo "Tests failed:"
    echo $failed
    echo -e "\e[00m"
    exit 1
  fi
}

function build_cmd {
  install_cmd 'build_fhir'
  pg_dump $PSQL_ARGS \
    --format=plain \
    --no-acl \
    --no-owner \
    --file=../fhirbase--1.0.sql \
    'build_fhir' \
    && echo "FhirBase schema successfully builded"
}

CMD=$1
ARGV=$@

case "$CMD" in
    "test" )
        test_cmd
        ;;
    "install" )
        install_cmd $2
        ;;
    "integrate" )
        install_cmd $DB
        test_cmd
        ;;
    "build" )
        install_cmd 'build_fhir'
        build_cmd
        ;;
    *)
        help_cmd
        exit
esac

exit 0
